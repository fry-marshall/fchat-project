name: Api Template

on:
  workflow_call:
    inputs:
      folder:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      VPS_IP:
        required: true
      VPS_USERNAME:
        required: true
      VPS_PORT:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      LOCAL_PORT:
        required: true
      DOCKER_PORT:
        required: true
      ACCESS_TOKEN_SECRET:
        required: true
      REFRESH_TOKEN_SECRET:
        required: true
      DB_HOST:
        required: true
      DB_NAME:
        required: true
      DB_USERNAME:
        required: true
      DB_PASSWORD:
        required: true
      DB_LOCAL_PORT:
        required: true
      DB_DOCKER_PORT:
        required: true
      MAIL_HOST:
        required: true
      MAIL_PORT:
        required: true
      MAIL_USERNAME:
        required: true
      MAIL_PASSWORD:
        required: true
      SPACE_NAME:
        required: true
      SPACE_ACCESS_KEY:
        required: true
      SPACE_SECRET_KEY:
        required: true
      SPACE_REGION:
        required: true
      SPACE_ENDPOINT:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Upload and deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /home/fchat-project/api-fchat

            cat > /home/fchat-project/api-fchat/.env.prod <<EOF
            NODE_ENV=production
            LOCAL_PORT=${{ secrets.LOCAL_PORT }}
            DOCKER_PORT=${{ secrets.DOCKER_PORT }}
            ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
            REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_LOCAL_PORT=${{ secrets.DB_LOCAL_PORT }}
            DB_DOCKER_PORT=${{ secrets.DB_DOCKER_PORT }}
            MAIL_HOST=${{ secrets.MAIL_HOST }}
            MAIL_PORT=${{ secrets.MAIL_PORT }}
            MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
            MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
            SPACE_NAME=${{ secrets.SPACE_NAME }}
            SPACE_ACCESS_KEY=${{ secrets.SPACE_ACCESS_KEY }}
            SPACE_SECRET_KEY=${{ secrets.SPACE_SECRET_KEY }}
            SPACE_REGION=${{ secrets.SPACE_REGION }}
            SPACE_ENDPOINT=${{ secrets.SPACE_ENDPOINT }}
            EOF

            PROJECT_DIR="/home"
            cd "$PROJECT_DIR"

            if [ -d "$PROJECT_DIR/fchat-project" ]; then
              echo "Directory already exists. Updating project..."
              cd "$PROJECT_DIR/fchat-project"
              git pull origin main
            else
              echo "Directory doesn't exist. Cloning project..."
              git clone git@github.com:fry-marshall/fchat-project.git
              cd fchat-project
            fi

            cd ${{ inputs.folder }}

            echo "ðŸš€ Running docker compose for the API"
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker compose -f docker-compose.prod.yml --env-file /home/fchat-project/api-fchat/.env.prod pull
            make prod
