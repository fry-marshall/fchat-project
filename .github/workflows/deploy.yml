name: Deploy workflow

on:
  release:
    types:
      - published
    tags:
      - 'v*/*'

jobs:
  deploy-image:
    runs-on: ubuntu-latest
    outputs:
      component: ${{ steps.check_tag.outputs.component }}
    steps:
      - name: Check if tag matches the pattern and extract component
        id: check_tag
        run: |
          TAG="${{ github.event.release.tag_name }}"
          echo "Tag: $TAG"
          if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+\/(api|auth|webapp)$ ]]; then
            COMPONENT="${BASH_REMATCH[1]}"
            echo "‚úÖ Valid tag format. Component: $COMPONENT"
            echo "component=$COMPONENT" >> "$GITHUB_OUTPUT"
          else
            echo "‚ùå Invalid tag format: $TAG"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy image
        run: |
          COMPONENT=${{ steps.check_tag.outputs.component }}
          if [ "$COMPONENT" = "api" ]; then
            cd api-fchat-2
          elif [ "$COMPONENT" = "webapp" ]; then
            cd webapp-fchat
          elif [ "$COMPONENT" = "auth" ]; then
            cd auth-fchat
          else
            echo "Unknown component"
            exit 1
          fi
          make deploy

  pull-image:
    needs: deploy-image
    runs-on: ubuntu-latest
    steps:
      - name: Log in to VPS and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USERNAME }}
          port: ${{ secrets.VPS_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            COMPONENT=${{ needs.deploy-image.outputs.component }}
            PROJECT_DIR="/home"
            if [ "$COMPONENT" = "api" ]; then
              REPO="api-fchat-2"
            elif [ "$COMPONENT" = "auth" ]; then
              REPO="auth-fchat"
            elif [ "$COMPONENT" = "webapp" ]; then
              REPO="webapp-fchat"
            else
              echo "Unknown component"
              exit 1
            fi

            cd "$PROJECT_DIR"
            if [ -d "$PROJECT_DIR/$REPO" ]; then
              echo "Directory already exists. Updating project..."
              cd "$PROJECT_DIR/tassa_api"
              git pull origin main
            else
              echo "Directory doesn't exist. Cloning project..."
              git clone git@github.com:fry-marshall/fchat-project.git
              cd fchat-project
              cd "$REPO"
            fi

            echo "üöÄ Running docker compose"
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker-compose pull
            make prod
